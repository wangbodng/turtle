# Copyright (C) 2009 Oracle/Innobase Oy
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# This is the CMakeLists for Embedded InnoDB
CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)

PROJECT (TESTS)

IF(DEFINED WIN32)
	ADD_DEFINITIONS("-D__WIN__ -D_WINDOWS -D_CRT_SECURE_NO_DEPRECATE")
ENDIF(DEFINED WIN32)

IF(DEFINED UNIX)
	SET(LIBS innodb pthread z m)
ELSE(DEFINED UNIX)
	SET(LIBS innodb)
ENDIF(DEFINED UNIX)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/../include)

ADD_EXECUTABLE(ib_cfg ib_cfg.c test0aux.c)
ADD_EXECUTABLE(ib_compressed ib_compressed.c test0aux.c)
ADD_EXECUTABLE(ib_cursor ib_cursor.c test0aux.c)
ADD_EXECUTABLE(ib_index ib_index.c test0aux.c)
ADD_EXECUTABLE(ib_logger ib_logger.c test0aux.c)
ADD_EXECUTABLE(ib_search ib_search.c test0aux.c)
ADD_EXECUTABLE(ib_status ib_status.c test0aux.c)
ADD_EXECUTABLE(ib_test1 ib_test1.c test0aux.c)
ADD_EXECUTABLE(ib_test2 ib_test2.c test0aux.c)
ADD_EXECUTABLE(ib_test3 ib_test3.c test0aux.c)
ADD_EXECUTABLE(ib_test5 ib_test5.c test0aux.c)
ADD_EXECUTABLE(ib_types ib_types.c test0aux.c)
ADD_EXECUTABLE(ib_update ib_update.c test0aux.c)

IF(DEFINED UNIX)
	ADD_EXECUTABLE(ib_mt_drv ib_mt_drv.c ib_mt_base.c ib_mt_t1.c ib_mt_t2.c test0aux.c)
	ADD_EXECUTABLE(ib_mt_stress ib_mt_stress.c test0aux.c)
	ADD_EXECUTABLE(ib_perf1 ib_perf1.c test0aux.c)
ENDIF(DEFINED UNIX)

LINK_DIRECTORIES(${EMBEDDED_INNODB})

TARGET_LINK_LIBRARIES(ib_cfg ${LIBS})
TARGET_LINK_LIBRARIES(ib_compressed ${LIBS})
TARGET_LINK_LIBRARIES(ib_cursor ${LIBS})
TARGET_LINK_LIBRARIES(ib_index ${LIBS})
TARGET_LINK_LIBRARIES(ib_logger ${LIBS})
TARGET_LINK_LIBRARIES(ib_search ${LIBS})
TARGET_LINK_LIBRARIES(ib_status ${LIBS})
TARGET_LINK_LIBRARIES(ib_test1 ${LIBS})
TARGET_LINK_LIBRARIES(ib_test2 ${LIBS})
TARGET_LINK_LIBRARIES(ib_test3 ${LIBS})
TARGET_LINK_LIBRARIES(ib_test5 ${LIBS})
TARGET_LINK_LIBRARIES(ib_types ${LIBS})
TARGET_LINK_LIBRARIES(ib_update ${LIBS})

IF(DEFINED UNIX)
	TARGET_LINK_LIBRARIES(ib_perf1 ${LIBS})
ENDIF(DEFINED UNIX)

IF(DEFINED WIN32)
	# for some reason, LINK_DIRECTORIES() does not work correctly
	SET_TARGET_PROPERTIES(ib_cfg PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_compressed PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_cursor PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_index PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_logger PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_search PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_status PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_test1 PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_test2 PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_test3 PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_test5 PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_types PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
	SET_TARGET_PROPERTIES(ib_update PROPERTIES LINK_FLAGS "/LIBPATH:..\\lib")
ELSEIF(DEFINED UNIX)
	TARGET_LINK_LIBRARIES(ib_mt_drv ${LIBS})
	TARGET_LINK_LIBRARIES(ib_mt_stress ${LIBS})
	TARGET_LINK_LIBRARIES(ib_perf1 ${LIBS})
ENDIF(DEFINED WIN32)
